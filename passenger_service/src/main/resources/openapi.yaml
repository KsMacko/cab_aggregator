openapi: 3.0.3
info:
  title: Passenger Service API
  version: 1.0
  description: API for managing passenger profiles

paths:
  /api/v1/passengers:
    get:
      summary: Get passengers with optional filters
      description: Retrieves passengers based on provided filters (email, phone, rate) or returns all passengers.
      parameters:
        - name: email
          in: query
          description: Email address of the passenger (optional)
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: Phone number of the passenger (optional)
          required: false
          schema:
            type: string
        - name: rate
          in: query
          description: Rating to filter passengers (optional)
          required: false
          schema:
            type: integer
        - name: sortBy
          in: query
          description:
            Field to sort by (default: firstName)
          required: false
          schema:
            type: string
            default: firstName
        - name: direction
          in: query
          description:
            Sort direction (ASC or DESC, default: ASC)
          required: false
          schema:
            type: string
            default: ASC
        - name: page
          in: query
          description:
            Page number (default: 0)
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description:
            Page size (default: 10)
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid parameters
        '404':
          description: Passenger not found

    post:
      summary: Create a new passenger
      description: Creates a new passenger profile and returns the created profile.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                rate:
                  type: integer
      responses:
        '201':
          description: Passenger successfully created
          content:
            application/json:
              schema:
                type: object

    put:
      summary: Update an existing passenger
      description: Updates an existing passenger profile and returns the updated profile.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                firstName:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                rate:
                  type: integer
      responses:
        '200':
          description: Passenger successfully updated
          content:
            application/json:
              schema:
                type: object

  /api/v1/passengers/{id}:
    get:
      summary: Get passenger by ID
      description: Retrieves a passenger by their unique identifier.
      parameters:
        - name: id
          in: path
          description: Unique identifier of the passenger
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object

    delete:
      summary: Delete a passenger
      description: Deletes a passenger profile by their unique identifier.
      parameters:
        - name: id
          in: path
          description: Unique identifier of the passenger to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Passenger successfully deleted


  /api/v1/passengers/by-email:
    get:
      summary: Get passenger by email
      description: Retrieves a passenger by their email address.
      parameters:
        - name: email
          in: query
          description: Email address of the passenger
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object

  /api/v1/passengers/by-phone:
    get:
      summary: Get passenger by phone
      description: Retrieves a passenger by their phone number.
      parameters:
        - name: phone
          in: query
          description: Phone number of the passenger
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object

  /api/v1/passengers/{id}/rates:
    get:
      summary: Get passenger's rating
      description: Retrieves the rating of a passenger by their unique identifier.
      parameters:
        - name: id
          in: path
          description: Unique identifier of the passenger
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer

  /api/v1/passengers/by-rate:
    get:
      summary: Get passengers by rating
      description: Retrieves a paginated list of passengers filtered by their rating.
      parameters:
        - name: rate
          in: query
          description: Rating to filter passengers
          required: true
          schema:
            type: integer
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
            default: firstName
        - name: direction
          in: query
          description: Sort direction (ASC or DESC)
          schema:
            type: string
            default: ASC
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object